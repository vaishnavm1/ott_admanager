"""
Django settings for test_ad_proj_1 project.

Generated by 'django-admin startproject' using Django 3.2.12.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path
import os

import cloudinary_storage
import cloudinary

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
TEMP_DIR = os.path.join(BASE_DIR, "templates")


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-c#mpd5e=ks(7dpik9q^5alko+o*1kit@z5px-j3a-2h6^gu&u4'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [

    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',


    # 'cloudinary_storage',
    # Cloudinary above django's staticfiles app

    'whitenoise.runserver_nostatic',
    'django.contrib.staticfiles',
    
    "user_admin",
    # "app1",
    "front",
    "publisher",
    "accountant",
    "marketer",




    "django_hosts",
    "crispy_forms",
]

MIDDLEWARE = [

    'django_hosts.middleware.HostsRequestMiddleware',

    'django.middleware.security.SecurityMiddleware',

    'whitenoise.middleware.WhiteNoiseMiddleware',
    
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

    'django_hosts.middleware.HostsResponseMiddleware',
]

ROOT_URLCONF = 'test_ad_proj_1.urls'
ROOT_HOSTCONF = 'test_ad_proj_1.hosts'
DEFAULT_HOST = 'front'
PARENT_HOST = "mysite.com"
HOST_PORT = "8000"

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [TEMP_DIR],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'test_ad_proj_1.wsgi.application'
AUTH_USER_MODEL = "user_admin.Account"

# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases


# DATABASES = {
# #     'default': {
# #         'ENGINE': 'django.db.backends.mysql',
# #         'NAME': 'test_ad_db',
# #         'HOST': 'localhost',
# #         'PORT': '3306',
# #         'USER': 'test_ad_user',
# #         'PASSWORD':'GZtdM!dF=Y{l',
# #         'OPTIONS': 
# #             {
# #                 'charset': 'utf8mb4'
# #             },
# #     }
# # }



DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}



# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE =  'Asia/Kolkata'

USE_I18N = True

USE_L10N = True

USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/


STATIC_URL = '/static/' 

STATICFILES_DIRS = (
    os.path.join(BASE_DIR, "static"),
)

STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

# STATIC_ROOT =  os.path.join(BASE_DIR, 'static')

# STATICFILES_STORAGE = "whitenoise.storage.CompressedManifestStaticFilesStorage"



MEDIA_ROOT =  os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# CLOUDINARY_STORAGE = {
#     'CLOUD_NAME': 'ottimage-storage',
#     'API_KEY': '979731245424515',
#     'API_SECRET': 'X4MBIrHl3TZbcuZcqAh5K4V9l20'
# }

# DEFAULT_FILE_STORAGE = 'cloudinary_storage.storage.MediaCloudinaryStorage'

# Aws config

# S3 Buckets Config

AWS_ACCESS_KEY_ID = 'AKIAQ7D3UW7OGHD4FKWJ'
AWS_SECRET_ACCESS_KEY = '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'
AWS_STORAGE_BUCKET_NAME = 'ott-test-1'

AWS_S3_FILE_OVERWRITE = False
AWS_DEFAULT_ACL = None
DEFAULT_FILE_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'


AWS_QUERYSTRING_AUTH = True

AWS_QUERYSTRING_EXPIRE = 100

AWS_S3_REGION_NAME = "ap-south-1"

CRISPY_TEMPLATE_PACK = 'bootstrap4'
